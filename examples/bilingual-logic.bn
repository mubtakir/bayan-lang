// Bilingual Logic Programming Example
// مثال البرمجة المنطقية ثنائي اللغة

// English facts
fact parent("John", "Alice");
fact parent("John", "Bob");
fact parent("Alice", "Charlie");
fact parent("Bob", "David");

// Arabic facts - حقائق عربية
حقيقة أب("خالد", "أحمد");
حقيقة أب("خالد", "فاطمة");
حقيقة أب("أحمد", "محمد");
حقيقة أب("فاطمة", "علي");

// English rules
rule grandparent(?x, ?z) :- parent(?x, ?y), parent(?y, ?z);
rule sibling(?x, ?y) :- parent(?p, ?x), parent(?p, ?y), ?x != ?y;

// Arabic rules - قواعد عربية
قاعدة جد(?س, ?ص) :- أب(?س, ?ع), أب(?ع, ?ص);
قاعدة أخ(?س, ?ص) :- أب(?و, ?س), أب(?و, ?ص), ?س != ?ص;

// Mixed rules - قواعد مختلطة
rule ancestor(?x, ?y) :- parent(?x, ?y);
rule ancestor(?x, ?y) :- parent(?x, ?z), ancestor(?z, ?y);

قاعدة سلف(?س, ?ص) :- أب(?س, ?ص);
قاعدة سلف(?س, ?ص) :- أب(?س, ?ع), سلف(?ع, ?ص);

// Queries - استعلامات
console.log("=== English Queries ===");
const johnGrandchildren = query grandparent("John", ?who);
console.log("John's grandchildren:", johnGrandchildren);

const aliceSiblings = query sibling("Alice", ?who);
console.log("Alice's siblings:", aliceSiblings);

console.log("\n=== Arabic Queries - استعلامات عربية ===");
const أحفاد_خالد = query جد("خالد", ?من);
console.log("أحفاد خالد:", أحفاد_خالد);

const إخوة_أحمد = query أخ("أحمد", ?من);
console.log("إخوة أحمد:", إخوة_أحمد);

console.log("\n=== Mixed Queries - استعلامات مختلطة ===");
const descendants = query ancestor("John", ?who);
console.log("John's descendants:", descendants);

const أسلاف_محمد = query سلف(?من, "محمد");
console.log("أسلاف محمد:", أسلاف_محمد);

