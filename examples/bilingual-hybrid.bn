// Bilingual Hybrid Programming Example
// مثال البرمجة الهجينة ثنائي اللغة
// Demonstrates the unique power of Bayan: mixing OOP, Logic, and Procedural in both languages!

hybrid {
    // === OOP Section - قسم البرمجة الكائنية ===
    
    // English class
    class Student {
        constructor(name, id) {
            this.name = name;
            this.id = id;
            this.courses = [];
        }
        
        enroll(course) {
            this.courses.push(course);
            // Add logic fact when enrolling
            fact enrolled(this.id, course);
        }
    }
    
    // Arabic class - صنف عربي
    صنف مادة {
        منشئ(الاسم, الكود, الساعات) {
            هذا.الاسم = الاسم;
            هذا.الكود = الكود;
            هذا.الساعات = الساعات;
        }
    }
    
    // === Logic Section - قسم البرمجة المنطقية ===
    
    // English facts
    fact course("CS101", "Programming 1", 3);
    fact course("CS102", "Programming 2", 3);
    fact course("CS201", "Data Structures", 3);
    
    // Arabic facts - حقائق عربية
    حقيقة مادة("CS101", "برمجة1", 3);
    حقيقة مادة("CS102", "برمجة2", 3);
    حقيقة مادة("CS201", "هياكل_بيانات", 3);
    
    // Prerequisites - المتطلبات
    fact prerequisite("CS102", "CS101");
    fact prerequisite("CS201", "CS102");
    حقيقة متطلب("CS102", "CS101");
    حقيقة متطلب("CS201", "CS102");
    
    // English rules
    rule canEnroll(?student, ?course) :-
        course(?course, ?name, ?credits),
        prerequisite(?course, ?prereq),
        enrolled(?student, ?prereq);
    
    // Can enroll if no prerequisites
    rule canEnroll(?student, ?course) :-
        course(?course, ?name, ?credits),
        not prerequisite(?course, ?any);
    
    // Arabic rules - قواعد عربية
    قاعدة يمكن_التسجيل(?طالب, ?مادة) :-
        مادة(?مادة, ?اسم, ?ساعات),
        متطلب(?مادة, ?متطلب_سابق),
        enrolled(?طالب, ?متطلب_سابق);
    
    قاعدة يمكن_التسجيل(?طالب, ?مادة) :-
        مادة(?مادة, ?اسم, ?ساعات),
        not متطلب(?مادة, ?أي);
    
    // === Procedural Section - قسم البرمجة الإجرائية ===
    
    // English function
    function registerStudent(student, courseCode) {
        console.log(`Attempting to register ${student.name} in ${courseCode}...`);
        
        const result = query canEnroll(student.id, courseCode);
        
        if (result.length > 0) {
            student.enroll(courseCode);
            console.log(`✅ Successfully registered!`);
            return true;
        } else {
            console.log(`❌ Cannot register - prerequisites not met`);
            return false;
        }
    }
    
    // Arabic function - دالة عربية
    دالة سجل_طالب(طالب, كود_المادة) {
        console.log(`محاولة تسجيل ${طالب.name} في ${كود_المادة}...`);
        
        const نتيجة = query يمكن_التسجيل(طالب.id, كود_المادة);
        
        إذا (نتيجة.length > 0) {
            طالب.enroll(كود_المادة);
            console.log(`✅ تم التسجيل بنجاح!`);
            ارجع صحيح;
        } وإلا {
            console.log(`❌ لا يمكن التسجيل - المتطلبات غير مكتملة`);
            ارجع خطأ;
        }
    }
    
    // === Usage - الاستخدام ===
    
    console.log("=== English Student ===");
    const john = new Student("John Doe", "S001");
    
    // Try to register for CS101 (no prerequisites)
    registerStudent(john, "CS101");
    
    // Try to register for CS102 (has CS101 as prerequisite - should work)
    registerStudent(john, "CS102");
    
    // Try to register for CS201 (has CS102 as prerequisite - should work)
    registerStudent(john, "CS201");
    
    console.log("\nJohn's courses:", john.courses);
    
    console.log("\n=== Arabic Student - طالب عربي ===");
    const أحمد = new Student("أحمد محمد", "S002");
    
    // Try CS101
    سجل_طالب(أحمد, "CS101");
    
    // Try CS201 without CS102 (should fail)
    سجل_طالب(أحمد, "CS201");
    
    // Register for CS102
    سجل_طالب(أحمد, "CS102");
    
    // Now try CS201 again (should work)
    سجل_طالب(أحمد, "CS201");
    
    console.log("\nأحمد's courses:", أحمد.courses);
    
    console.log("\n=== Mixed Usage - استخدام مختلط ===");
    const sara = new Student("Sara Ahmed", "S003");
    
    // Mix English and Arabic function calls
    registerStudent(sara, "CS101");
    سجل_طالب(sara, "CS102");
    registerStudent(sara, "CS201");
    
    console.log("\nSara's courses:", sara.courses);
}

console.log("\n🎉 Bilingual Hybrid Programming Demo Complete!");
console.log("This is the power of Bayan - no other language can do this!");

